cat Homo_sapiens.GRCh38.96.gtf | awk -F'\t' '{if($3=="gene") {split($9,a,";"); print a[1]"\t"$5-$4};}' | sed 's/[gene_id |"|]//g' > hg38_gene_length.txt 

#file 일괄처리 SRR file 에서 SRR... 떼고 sample 명으로만 파일이름을 교체 
ls | grep "SRR" | cut -d"_" -f 3-4,8 > sample   
ls | grep "SRR" | sed '1d' > SRR 
paste SRR sample > SRR2sample
cat SRR2sample | while read id; do arr=(${id}); SRR=${arr[0]}; sample=${arr[1]}; mv ./${SRR} ./${sample}; done 

# config 만들기 (WES에서) 
ls | grep "WES" | cut -d"_" -f 1-3 | sort -u > ../config 
#scRNA 에서 config 
ls | cut -d"_" -f 1-2 | sort -u > config


find ./*gz -size 1M | xargs rm

#SRR1234  RNA_01  > SRR1234_1.fastq.gz RNA_01_1.fastq.gz 
                    SRR1234_2.fastq.gz RNA_01_2.fastq.gz 로 변경 
cat id.txt | awk '{print $1"_1.fastq.gz""\t"$2"_1.fastq.gz""\n"$1"_2.fastq.gz""\t"$2"_2.fastq.gz"}' > id4.txt 

#1-30행 삭제 , 필드 1 을 기준으로 unique, 2번째 열만 삭제 
cat raw_count.txt | sed '1,30d' | sort -k1 -u | cut -f2 --complement  > rawcount.txt

#파일 사이즈에 따라 추출 & 삭제 
find ./*_trim.log -size -9k
find ./*_trim.log -size -9k -exec rm {} \;  

#dir 에서 fastq.gz 파일 > config
find . -maxdepth 2 -name "*.fastq.gz" | cut -d"/" -f3 | cut -d"_" -f 1-3 | sort -u > ../config
cat config | while read id ; do mkdir ${id} ; done

#featurecount - file merge 
(1)
awk 'NF > 1{ a[$1] = a[$1]"\t"$7} END {for( i in a ) print i a[i]}' *.txt | grep -v "\#" | grep -v "Geneid" > merge.txt
awk 'NF > 1{ a[$1] = a[$1]"\t"$7} END {for( i in a ) print i a[i]}' *.txt | grep -v "\#" | sed -n '/Geneid/p'  > sample.txt
cat sample.txt merge.txt > output.txt
(2) #parallel 중간에 command 작동안됨 
ls -1  *.txt | parallel 'cat {} | sed '1d' | cut -f7 {} > {/.}_clean.txt'  
ls -1  *.txt | head -1 | xargs cut -f1 > genes.txt
paste genes.txt *_clean.txt | grep -v "\#" > output.txt

#STAR GeneCount 
ls *ReadsPerGene.out.tab | parallel 'cat {} | sed '1,4d' > {/.}_clean.txt' 
awk 'NF > 1{ a[$1] = a[$1]"\t"$2} END {for( i in a ) print i a[i]}' *ReadsPerGene.out_clean.txt  > merge.txt 
cat sample.txt merge.txt > count.txt

# GTF > gene id 변환 
cat gencode.v19.genes.v7_model.patched_contigs.gtf | 
awk 'BEGIN{FS="\t"}{split($9,a,";"); if($3~"gene") print a[1]"\t"a[3]"\t"$1":"$4"-"$5"\t"a[5]"\t"$7}' | 
sed 's/gene_id "//' | sed 's/gene_id "//' | sed 's/gene_biotype "//'| sed 's/gene_name "//' | sed 's/gene_biotype "//' | sed 's/"//g' | sed 's/ //g' | 
sed '1igene_id\tGeneSymbol\tChromosome\tClass\tStrand' > gene.txt

history | grep plink  #썻던 명령어 찾기 

#1열앞에 chr추가 & 뒤에 순서번호 추가  
cat highLD.txt | awk  '{print "chr"$1,$2,$3,NR}' > hi.txt 

#파일 위아래로 합치기 
cat *_sample_sample2.txt | sort -u > control.txt

#0/0 을 0으로 치환, ./. > NA,  0/1 > 1 , 1/1 > 2  , 특수문자 .과/앞에 \을 붙여야함
cat sample.txt | sed 's/0\/0/0/g' | sed 's/0\/1/1/g' | sed 's/1\/1/2/g' | sed 's/\.\/\./NA/g' > sample2.txt

#28번째 행만 추출 
cat 200624_1_HapMap_8840.vcf | sed -n '28p' > vcf28.txt

#열개수 > wc -w 

#column 따라 file merge하기 
join HapMap_10.fam PRSice.best | cut -d" " -f3-4 --complement | cut -d" " -f5-6 --complement > merge.txt

#공백구분자를 탭으로 변환
cat merge.txt | sed 's/\ /\t/g' > merge2.txt

#행열변환 
cat head.txt | sed 's/\t/\n/g' > head2.txt

#열행변환 
tr -s '\n' '\t'< head4.txt > head5.txt

#thread 추가  `` 안에 command 
#!/bin/bash
 th="20"
for ((i=7601;i<=7800;i++));do
j=`cut -f $i merge.vcf > $i.vcf`
  if [[ $j -ge $th ]];then
    until [[ $j -lt $th ]]
      do j=`cut -f $i merge.vcf > $i.vcf`
      done
  fi
done

#htseq-count file merge 
awk 'NF > 1{ a[$1] = a[$1]"\t"$2} END {for( i in a ) print i a[i]}' *.txt | sort -k1 > merge.txt
ls | grep "htseq_counts" | cut -d"_" -f 1-2  > sample.txt
tr -s '\n' '\t'< sample.txt > head.txt
cat head.txt merge.txt | grep -v '^_' > out.txt

#echo 
echo -e "cat xaa | while read id ; do  awk -v T=\${id} '{print \$0\"\\\t\"T}' \${id}.vcf > ../8840_4/\${id}.vcf ; done"
결과 : cat xaa | while read id ; do  awk -v T=${id} '{print $0"\t"T}' ${id}.vcf > ../8840_4/${id}.vcf ; done

cat config.txt | while read id ; 
do echo -e "cat ${id} | while read id ; do  awk -v T=\${id} '{print \$0\"\\\t\"T}' \${id}.vcf > ../8840_4/\${id}.vcf ; done" > ./8840_3/${id}.sh ; done

#awk nohup 문장 만들기 
cat config.txt | awk '{printf "nohup bash %s.sh &\n",$1}' > bash.txt

#한개 파일 200행 씩 나누어 여러파일에 
split -l 200 config

#awk 뒤에 . 붙히기 
awk '{print $0 "\t"".""\t""."}' exonic.vcf > exo.vcf

awk '$12 !~ /0\/0/' exo7.vcf > exo8.vcf
awk '$12 !~ /\.\/\./' exo8.vcf > exo9.vcf

#multianno 합치기
#!/bin/sh
for i in *.multianno
do
cut -f '2-13' $i |sed '1d' | sed "s/$/\t${i%%.*}/" >> all_annovar
done
grep -P "\texonic\t" all_annovar > all_annovar2
sed -i '1s/^/Chr\tStart\tEnd\tRef\tAlt\tFunc.refGene\tGene.refGene\tGeneDetail.refGene\tExonicFunc.refGene\tAAChange.refGene\tTumor_Sample_Barcode\n/' all_annovar2

cat con | while read id; do awk -F ' ' '{print $1" "$2" "$3"\t"$3}' ${id}.txt  > ${id}_2.txt; done
cat con | while read id; do rm {id}.txt; mv ${id}_2.txt ${id}.txt; done
cat config | while read id; do echo "IID ${id}" > ${id}_head.txt ; done
awk -F ' ' 'NF > 1{ a[$1] = a[$1]"\t"$2} END {for( i in a ) print i a[i]}' *.txt > merge.txt
